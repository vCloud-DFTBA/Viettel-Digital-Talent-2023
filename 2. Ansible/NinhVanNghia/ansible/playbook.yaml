---
- name: Install Docker
  hosts: all
  become_user: root
  roles:
  - common


- name: Build source code and push to DockerHub
  hosts: coordinator
  become: true
  become_user: "{{ USER }}"
  gather_facts: false
  roles:
  - builder


- name: Deploy database
  hosts: db
  become_user: "{{ USER }}"
  gather_facts: false
  tasks:
  - name: Pull and start database container
    docker_container:
      image: mysql:8.0.27
      name: primary_db
      pull: true
      env:
        MYSQL_ROOT_PASSWORD: "{{ DB.PASSWORD }}"
        MYSQL_DATABASE: "{{ DB.NAME }}"
      published_ports:
        - "{{DB.PORT}}:{{DB.PORT}}"
      volumes:
      - db_data:/var/lib/mysql
      state: started

  - name: Wait for database to start
    wait_for:
      host: localhost
      port: "{{DB.PORT}}"
      delay: 3
      timeout: 30


- name: Deploy api
  hosts: api
  become_user: "{{ USER }}"
  gather_facts: false
  tasks:
  - name: Pull and start api container
    docker_container:
      name: api
      image: "{{DOCKER.USERNAME}}/api:{{DOCKER.APP_VERSION}}"
      pull: true
      env:
        DB_HOST: "{{DB.HOST}}"
        DB_USERNAME: "{{DB.USERNAME}}"
        DB_PASSWORD: "{{DB.PASSWORD}}"
        DB_PORT: "{{DB.PORT}}"
        DB_NAME: "{{DB.NAME}}"
        DB_DIALECT: mysql
        DB_POOL_MIN: "1"
        DB_POOL_MAX: "5"
        DB_POOL_ACQUIRE: "30000"
        DB_POOL_IDLE: "10000"
      network_mode: host
      state: started


- name: Deploy web
  hosts: web
  become_user: "{{ USER }}"
  gather_facts: false
  tasks:
  - name: Pull and start web container
    docker_container:
      name: web
      image: "{{DOCKER.USERNAME}}/web:{{DOCKER.APP_VERSION}}"
      pull: true
      published_ports:
        - "80:80"
      state: started


- name: Deploy load balancer
  hosts: lb
  become_user: "{{ USER }}"
  gather_facts: false
  tasks:
  - name: Wait for api container to start
    wait_for:
      host: api
      port: 8000
      delay: 3
      timeout: 30

  - name: Wait for web container to start
    wait_for:
      host: web
      port: 80
      delay: 3
      timeout: 30

  - name: Pull and start lb container
    docker_container:
      name: lb
      image: "{{DOCKER.USERNAME}}/lb:{{DOCKER.APP_VERSION}}"
      pull: true
      network_mode: host
      state: started


# - name: Test lb connectivity
#   hosts: coordinator
#   gather_facts: false
#   tasks:
#   - name: Check lb connectivity
#     command: "curl -sS http://lb"
#     register: web_response
#     until: web_response.rc == 0
#     retries: 5
#     delay: 10
#     ignore_errors: true

#   - name: Print lb connectivity test results
#     debug:
#       var: item.stdout
#     with_items:
#       - "{{ web_response }}"
