name: Python package

on:
  push:
  # paths:
  #   - "!README.md"
  pull_request:
    # paths:
    #   - "!README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      # You can use PyPy versions in python-version.
      # For example, pypy2.7 and pypy3.9
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: install some independencies
        run: |
          pip install --upgrade pip
          if [ -f "api/requirements.txt" ]; then pip install -r "api/requirements.txt"; fi
          if [ -f "tests/requirements.txt" ]; then pip install -r "tests/requirements.txt"; fi

      - name: pull docker image
        run: |
          docker pull mongo:5.0
          docker pull python:3.9-alpine3.15

      - name: Start containers
        run: docker-compose -f "api/docker-compose.yml" up -d --build

        # it make sure api container is running Adjust the sleep duration as needed to allow the API container to start
      - name: Wait for API to start
        run: sleep 5 


      - name: check docker container running
        run:
          docker ps
      
      - name: runtest
        run:
          python -u "tests/unit-test.py"
# python -m unittest discover -s tests -p "tests/*.py"