minhson@minhson7112:~/gk$ ansible-playbook -i Ansible/inventory/inventory.yaml Ansible/setup.yaml 

PLAY [log] ******************************************************************************************************************************************************************

TASK [Gathering Facts] ******************************************************************************************************************************************************
ok: [localhost]

TASK [logging : Build and up images fluentd] ********************************************************************************************************************************
changed: [localhost]

PLAY [sonbm] ****************************************************************************************************************************************************************

TASK [Gathering Facts] ******************************************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [common : install dependencies] ****************************************************************************************************************************************
ok: [host1] => (item=apt-transport-https)
ok: [host1] => (item=ca-certificates)
ok: [host2] => (item=apt-transport-https)
ok: [host1] => (item=curl)
ok: [localhost] => (item=apt-transport-https)
ok: [host2] => (item=ca-certificates)
ok: [host1] => (item=gnupg-agent)
ok: [localhost] => (item=ca-certificates)
ok: [host2] => (item=curl)
ok: [host1] => (item=software-properties-common)
ok: [host2] => (item=gnupg-agent)
ok: [localhost] => (item=curl)
ok: [host2] => (item=software-properties-common)
ok: [localhost] => (item=gnupg-agent)
ok: [localhost] => (item=software-properties-common)

TASK [common : add GPG key] *************************************************************************************************************************************************
ok: [localhost]
ok: [host1]
ok: [host2]

TASK [common : add docker repository to apt] ********************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [common : install docker] **********************************************************************************************************************************************
ok: [host2] => (item=docker-ce)
ok: [host1] => (item=docker-ce)
ok: [localhost] => (item=docker-ce)
ok: [host2] => (item=docker-ce-cli)
ok: [host1] => (item=docker-ce-cli)
ok: [localhost] => (item=docker-ce-cli)
ok: [host2] => (item=containerd.io)
ok: [host1] => (item=containerd.io)
ok: [localhost] => (item=containerd.io)

TASK [common : check docker is active] **************************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [common : Ensure group "docker" exists] ********************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [common : adding user "minhson" to docker group] ***********************************************************************************************************************
changed: [localhost]
changed: [host2]
changed: [host1]

TASK [common : install docker-compose] **************************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [common : Change file ownership, group and permissions] ****************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [db : Copy init data to remote host] ***********************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [db : Check if docker network exists] **********************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [db : Create docker network] *******************************************************************************************************************************************
skipping: [localhost]
skipping: [host1]
skipping: [host2]

TASK [db : Run docker image mongo:5.0] **************************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [web : Check if docker network exists] *********************************************************************************************************************************
ok: [localhost]
ok: [host1]
ok: [host2]

TASK [web : Create docker network] ******************************************************************************************************************************************
skipping: [localhost]
skipping: [host1]
skipping: [host2]

TASK [web : Run docker image minhson7112/sonbm-frontend:latest] *************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [api : Check if docker network exists] *********************************************************************************************************************************
ok: [localhost]
ok: [host1]
ok: [host2]

TASK [api : Create docker network] ******************************************************************************************************************************************
skipping: [localhost]
skipping: [host1]
skipping: [host2]

TASK [api : Run docker image minhson7112/sonbm-api:latest] ******************************************************************************************************************
ok: [host2]
ok: [host1]
changed: [localhost]

TASK [monitor : Install docker python module] *******************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [monitor : Start Node Exporter Container] ******************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [monitor : Start Cadvisor Container] ***********************************************************************************************************************************
ok: [localhost]
ok: [host2]
ok: [host1]

TASK [monitor : Start Prometheus contaier] **********************************************************************************************************************************
skipping: [host1]
skipping: [host2]
ok: [localhost]

PLAY [lb] *******************************************************************************************************************************************************************

TASK [Gathering Facts] ******************************************************************************************************************************************************
ok: [localhost]

TASK [lb : Create /etc/nginxconf folder] ************************************************************************************************************************************
ok: [localhost]

TASK [lb : Copy nginx.conf to host] *****************************************************************************************************************************************
ok: [localhost]

TASK [lb : Check if docker network exists] **********************************************************************************************************************************
ok: [localhost]

TASK [lb : Create docker network] *******************************************************************************************************************************************
skipping: [localhost]

TASK [lb : Run nginx load balancing] ****************************************************************************************************************************************
ok: [localhost]

PLAY RECAP ******************************************************************************************************************************************************************
host1                      : ok=20   changed=1    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
host2                      : ok=20   changed=1    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
localhost                  : ok=28   changed=3    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   

