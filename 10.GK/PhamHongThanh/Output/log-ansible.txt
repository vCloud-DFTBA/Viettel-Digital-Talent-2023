COMMAND: ansible-playbook -i inventory.yaml setup.yaml 
OUTPUT:
PLAY [OS] *******************************************************************************************************************************************************************************************

TASK [Gathering Facts] ******************************************************************************************************************************************************************************
ok: [host1]

TASK [common : Install required packages] ***********************************************************************************************************************************************************
ok: [host1]

TASK [common : Add Docker's official GPG Key] *******************************************************************************************************************************************************
ok: [host1]

TASK [common : Add Docker Repository] ***************************************************************************************************************************************************************
ok: [host1]

TASK [common : Install Docker Engine and relative packages] *****************************************************************************************************************************************
ok: [host1]

TASK [common : Install Docker and Docker Compose for Python] ****************************************************************************************************************************************
ok: [host1]

TASK [common : Manage Docker as a non-root user] ****************************************************************************************************************************************************
ok: [host1]

TASK [common : Create Docker network] ***************************************************************************************************************************************************************
ok: [host1]

PLAY [log] ******************************************************************************************************************************************************************************************

TASK [Gathering Facts] ******************************************************************************************************************************************************************************
ok: [localhost]
ok: [host1]

TASK [log : Create Docker network] ******************************************************************************************************************************************************************
ok: [localhost]
ok: [host1]

TASK [log : Pull customized fluentd image] **********************************************************************************************************************************************************
changed: [host1]
changed: [localhost]

TASK [log : Start fluentd] **************************************************************************************************************************************************************************
[DEPRECATION WARNING]: The container_default_behavior option will change its default value from "compatibility" to "no_defaults" in community.general 3.0.0. To remove this warning, please specify 
an explicit value for it now. This feature will be removed from community.general in version 3.0.0. Deprecation warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: Please note that docker_container handles networks slightly different than docker CLI. If you specify networks, the default network will still be attached as the first 
network. (You can specify purge_networks to remove all networks not explicitly listed.) This behavior will change in community.general 2.0.0. You can change the behavior now by setting the new 
`networks_cli_compatible` option to `yes`, and remove this warning by setting it to `no`. This feature will be removed from community.general in version 2.0.0. Deprecation warnings can be disabled
 by setting deprecation_warnings=False in ansible.cfg.
changed: [localhost]
changed: [host1]

PLAY [monitor] **************************************************************************************************************************************************************************************

TASK [Gathering Facts] ******************************************************************************************************************************************************************************
ok: [localhost]
ok: [host1]

TASK [monitor : Start Node Exporter Container] ******************************************************************************************************************************************************
changed: [localhost]
changed: [host1]

TASK [monitor : Start Cadvisor Container] ***********************************************************************************************************************************************************
changed: [localhost]
changed: [host1]

TASK [monitor : Create docker volume for local prometheus] ******************************************************************************************************************************************
ok: [localhost]
ok: [host1]

TASK [monitor : Start Prometheus contaier] **********************************************************************************************************************************************************
changed: [localhost]
changed: [host1]

PLAY [Web] ******************************************************************************************************************************************************************************************

TASK [db : Run Docker image for custom Mongodb instance] ********************************************************************************************************************************************
changed: [localhost]
changed: [host1]

TASK [api : Run docker image Flask Backend] *********************************************************************************************************************************************************
changed: [localhost]
ok: [host1]

TASK [web : Run docker image React frontend] ********************************************************************************************************************************************************
changed: [localhost]
ok: [host1]

PLAY [lb] *******************************************************************************************************************************************************************************************

TASK [lb : Run nginx load balancing] ****************************************************************************************************************************************************************
changed: [localhost]

PLAY RECAP ******************************************************************************************************************************************************************************************
host1                      : ok=20   changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
localhost                  : ok=13   changed=9    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
