version: '3.3'

services:
  db:
    image: mongo:5.0.17
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_DATABASE: flask
    ports:
      - "27017:27017"
    volumes:
      - ./database:/data/db
    networks:
      - backend
  web_1:
    build: ./web
    container_name: flask_1
    restart: unless-stopped
    environment:
      MONGODB_DATABASE: flask
      MONGODB_HOSTNAME: db
      COLOR: "#003366"
    ports:
      - "5000:5000"
    networks:
      - frontend
      - backend
    depends_on:
      - db

  web_2:
    build: ./web
    container_name: flask_2
    restart: unless-stopped
    environment:
      MONGODB_DATABASE: flask
      MONGODB_HOSTNAME: db
      COLOR: "#ff0033"
    ports:
      - "5001:5000"
    networks:
      - frontend
      - backend
    depends_on:
      - db

  web_3:
    build: ./web
    container_name: flask_3
    restart: unless-stopped
    environment:
      MONGODB_DATABASE: flask
      MONGODB_HOSTNAME: db
      COLOR: "#00ff00"
    ports:
      - "5002:5000"
    networks:
      - frontend
      - backend
    depends_on:
      - db

  nginx:
    image: nginx:1.22.0-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - frontend
    depends_on:
      - web_1
      - web_2
      - web_3

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
