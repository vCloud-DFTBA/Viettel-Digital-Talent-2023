{
  "version": "1.1",
  "engine": "linux|Transformer|1.40.0|a4bb798922820523fceedb9121f5bcfdfc9f2901|2023-01-15_09:42:23PM",
  "containerized": false,
  "host_distro": {
    "name": "Ubuntu",
    "version": "22.04",
    "display_name": "Ubuntu 22.04.2 LTS"
  },
  "type": "build",
  "state": "done",
  "target_reference": "three-tier-webapp_backend:latest",
  "system": {
    "type": "",
    "release": "",
    "distro": {
      "name": "",
      "version": "",
      "display_name": ""
    }
  },
  "source_image": {
    "identity": {
      "id": "sha256:ecd0e261d5c5a2961d5e6ba3edb66c7948054c261d8126561f42b62d5609c65a",
      "tags": [
        "latest"
      ],
      "names": [
        "three-tier-webapp_backend:latest"
      ]
    },
    "size": 884143423,
    "size_human": "884 MB",
    "create_time": "2023-04-28T15:04:26Z",
    "docker_version": "",
    "architecture": "arm64",
    "exposed_ports": [
      "5000/tcp"
    ],
    "os": "linux",
    "env_vars": [
      "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
      "LANG=C.UTF-8",
      "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
      "PYTHON_VERSION=3.9.16",
      "PYTHON_PIP_VERSION=22.0.4",
      "PYTHON_SETUPTOOLS_VERSION=58.1.0",
      "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/d5cb0afaf23b8520f1bbcfed521017b4a95f5c01/public/get-pip.py",
      "PYTHON_GET_PIP_SHA256=394be00f13fa1b9aaa47e911bdb59a09c3b2986472130f30aa0bfaf7f3980637",
      "FLASK_APP=api.py"
    ],
    "container_entry": {
      "exe_path": ""
    }
  },
  "minified_image_size": 42584022,
  "minified_image_size_human": "43 MB",
  "minified_image": "three-tier-webapp_backend.slim:6",
  "minified_image_has_data": true,
  "minified_by": 20.762327781063046,
  "artifact_location": "/tmp/slim-state/.slim-state/images/ecd0e261d5c5a2961d5e6ba3edb66c7948054c261d8126561f42b62d5609c65a/artifacts",
  "container_report_name": "creport.json",
  "seccomp_profile_name": "three-tier-webapp_backend-seccomp.json",
  "apparmor_profile_name": "three-tier-webapp_backend-apparmor-profile",
  "image_stack": [
    {
      "is_top_image": true,
      "id": "sha256:ecd0e261d5c5a2961d5e6ba3edb66c7948054c261d8126561f42b62d5609c65a",
      "full_name": "three-tier-webapp_backend:latest",
      "repo_name": "three-tier-webapp_backend",
      "version_tag": "latest",
      "raw_tags": [
        "three-tier-webapp_backend:latest"
      ],
      "create_time": "2023-04-28T15:04:26Z",
      "new_size": 884143423,
      "new_size_human": "884 MB",
      "instructions": [
        {
          "type": "ADD",
          "time": "2023-04-12T00:39:42Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 117950190,
          "size_human": "118 MB",
          "params": "file:dd3d4e5fe819950e7d01b44a29dbd790438cd722ba76198910e2597448ab0c6f in /",
          "command_snippet": "ADD file:dd3d4e5fe819950e7d01b44a29dbd790438...",
          "command_all": "ADD file:dd3d4e5fe819950e7d01b44a29dbd790438cd722ba76198910e2597448ab0c6f /",
          "target": "/",
          "source_type": "file",
          "inst_set_time_bucket": "2023-04-12T03:30:00+03:00"
        },
        {
          "type": "CMD",
          "time": "2023-04-12T00:39:43Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"bash\"]\n",
          "command_snippet": "CMD [\"bash\"]\n",
          "command_all": "CMD [\"bash\"]\n",
          "inst_set_time_bucket": "2023-04-12T03:30:00+03:00"
        },
        {
          "type": "RUN",
          "time": "2023-04-12T01:06:43Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 10534828,
          "size_human": "10 MB",
          "command_snippet": "RUN set -eux; \tapt-get update; \tapt-get inst...",
          "command_all": "RUN set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*",
          "system_commands": [
            "set -eux",
            "apt-get update",
            "apt-get install -y --no-install-recommends ca-certificates curl netbase wget",
            "rm -rf /var/lib/apt/lists/*"
          ],
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "RUN",
          "time": "2023-04-12T01:06:48Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 18803747,
          "size_human": "19 MB",
          "command_snippet": "RUN set -ex; \tif ! command -v gpg > /dev/nul...",
          "command_all": "RUN set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi",
          "system_commands": [
            "set -ex",
            "if ! command -v gpg > /dev/null",
            "then apt-get update",
            "apt-get install -y --no-install-recommends gnupg dirmngr",
            "rm -rf /var/lib/apt/lists/*",
            "fi"
          ],
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "RUN",
          "time": "2023-04-12T01:07:02Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 150310346,
          "size_human": "150 MB",
          "command_snippet": "RUN apt-get update && \\\n\tapt-get install -y ...",
          "command_all": "RUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps && \\\n\trm -rf /var/lib/apt/lists/*",
          "system_commands": [
            "apt-get update",
            "apt-get install -y --no-install-recommends git mercurial openssh-client subversion procps",
            "rm -rf /var/lib/apt/lists/*"
          ],
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "RUN",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 487788355,
          "size_human": "488 MB",
          "command_snippet": "RUN set -ex; \tapt-get update; \tapt-get insta...",
          "command_all": "RUN set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*",
          "system_commands": [
            "set -ex",
            "apt-get update",
            "apt-get install -y --no-install-recommends autoconf automake bzip2 dpkg-dev file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libglib2.0-dev libgmp-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libmaxminddb-dev libncurses5-dev libncursesw5-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch unzip xz-utils zlib1g-dev $( if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'",
            "then echo 'default-libmysqlclient-dev'",
            "else echo 'libmysqlclient-dev'",
            "fi )",
            "rm -rf /var/lib/apt/lists/*"
          ],
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "command_snippet": "ENV PATH=/usr/local/bin:/usr/local/sbin:/usr...",
          "command_all": "ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "LANG=C.UTF-8",
          "command_snippet": "ENV LANG=C.UTF-8",
          "command_all": "ENV LANG=C.UTF-8",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "RUN",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 18678880,
          "size_human": "19 MB",
          "command_snippet": "RUN set -eux; \tapt-get update; \tapt-get inst...",
          "command_all": "RUN set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibbluetooth-dev \t\ttk-dev \t\tuuid-dev \t; \trm -rf /var/lib/apt/lists/*",
          "system_commands": [
            "set -eux",
            "apt-get update",
            "apt-get install -y --no-install-recommends libbluetooth-dev tk-dev uuid-dev",
            "rm -rf /var/lib/apt/lists/*"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
          "command_snippet": "ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E3...",
          "command_all": "ENV GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PYTHON_VERSION=3.9.16",
          "command_snippet": "ENV PYTHON_VERSION=3.9.16",
          "command_all": "ENV PYTHON_VERSION=3.9.16",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "RUN",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 43931496,
          "size_human": "44 MB",
          "command_snippet": "RUN set -eux; \t\twget -O python.tar.xz \"https...",
          "command_all": "RUN set -eux; \t\twget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"; \twget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"; \tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\"; \tgpg --batch --verify python.tar.xz.asc python.tar.xz; \tcommand -v gpgconf > /dev/null && \\\n\tgpgconf --kill all || :; \trm -rf \"$GNUPGHOME\" python.tar.xz.asc; \tmkdir -p /usr/src/python; \ttar --extract --directory /usr/src/python --strip-components=1 --file python.tar.xz; \trm python.tar.xz; \t\tcd /usr/src/python; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t--with-system-expat \t\t--without-ensurepip \t; \tnproc=\"$(nproc)\"; \tEXTRA_CFLAGS=\"$(dpkg-buildflags --get CFLAGS)\"; \tLDFLAGS=\"$(dpkg-buildflags --get LDFLAGS)\"; \tmake -j \"$nproc\" \t\t\"EXTRA_CFLAGS=${EXTRA_CFLAGS:-}\" \t\t\"LDFLAGS=${LDFLAGS:-}\" \t\t\"PROFILE_TASK=${PROFILE_TASK:-}\" \t; \trm python; \tmake -j \"$nproc\" \t\t\"EXTRA_CFLAGS=${EXTRA_CFLAGS:-}\" \t\t\"LDFLAGS=${LDFLAGS:--Wl},-rpath='\\$\\$ORIGIN/../lib'\" \t\t\"PROFILE_TASK=${PROFILE_TASK:-}\" \t\tpython \t; \tmake install; \t\tbin=\"$(readlink -ve /usr/local/bin/python3)\"; \tdir=\"$(dirname \"$bin\")\"; \tmkdir -p \"/usr/share/gdb/auto-load/$dir\"; \tcp -vL Tools/gdb/libpython.py \"/usr/share/gdb/auto-load/$bin-gdb.py\"; \t\tcd /; \trm -rf /usr/src/python; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name 'libpython*.a' \\) \\) \t\t\\) -exec rm -rf '{}' + \t; \t\tldconfig; \t\tpython3 --version",
          "system_commands": [
            "set -eux; wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"; wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"; GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\"; gpg --batch --verify python.tar.xz.asc python.tar.xz; command -v gpgconf > /dev/null",
            "gpgconf --kill all || :; rm -rf \"$GNUPGHOME\" python.tar.xz.asc; mkdir -p /usr/src/python; tar --extract --directory /usr/src/python --strip-components=1 --file python.tar.xz; rm python.tar.xz; cd /usr/src/python; gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-optimizations --enable-option-checking=fatal --enable-shared --with-system-expat --without-ensurepip ; nproc=\"$(nproc)\"; EXTRA_CFLAGS=\"$(dpkg-buildflags --get CFLAGS)\"; LDFLAGS=\"$(dpkg-buildflags --get LDFLAGS)\"; make -j \"$nproc\" \"EXTRA_CFLAGS=${EXTRA_CFLAGS:-}\" \"LDFLAGS=${LDFLAGS:-}\" \"PROFILE_TASK=${PROFILE_TASK:-}\" ; rm python; make -j \"$nproc\" \"EXTRA_CFLAGS=${EXTRA_CFLAGS:-}\" \"LDFLAGS=${LDFLAGS:--Wl},-rpath='$$ORIGIN/../lib'\" \"PROFILE_TASK=${PROFILE_TASK:-}\" python ; make install; bin=\"$(readlink -ve /usr/local/bin/python3)\"; dir=\"$(dirname \"$bin\")\"; mkdir -p \"/usr/share/gdb/auto-load/$dir\"; cp -vL Tools/gdb/libpython.py \"/usr/share/gdb/auto-load/$bin-gdb.py\"; cd /; rm -rf /usr/src/python; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests -o -name idle_test ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' -o -name 'libpython*.a' ) ) ) -exec rm -rf '{}' + ; ldconfig; python3 --version"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "RUN",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 32,
          "size_human": "32 B",
          "command_snippet": "RUN set -eux; \tfor src in idle3 pydoc3 pytho...",
          "command_all": "RUN set -eux; \tfor src in idle3 pydoc3 python3 python3-config; do \t\tdst=\"$(echo \"$src\" | tr -d 3)\"; \t\t[ -s \"/usr/local/bin/$src\" ]; \t\t[ ! -e \"/usr/local/bin/$dst\" ]; \t\tln -svT \"$src\" \"/usr/local/bin/$dst\"; \tdone",
          "system_commands": [
            "set -eux",
            "for src in idle3 pydoc3 python3 python3-config",
            "do dst=\"$(echo \"$src\" | tr -d 3)\"",
            "[ -s \"/usr/local/bin/$src\" ]",
            "[ ! -e \"/usr/local/bin/$dst\" ]",
            "ln -svT \"$src\" \"/usr/local/bin/$dst\"",
            "done"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PYTHON_PIP_VERSION=22.0.4",
          "command_snippet": "ENV PYTHON_PIP_VERSION=22.0.4",
          "command_all": "ENV PYTHON_PIP_VERSION=22.0.4",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PYTHON_SETUPTOOLS_VERSION=58.1.0",
          "command_snippet": "ENV PYTHON_SETUPTOOLS_VERSION=58.1.0",
          "command_all": "ENV PYTHON_SETUPTOOLS_VERSION=58.1.0",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/d5cb0afaf23b8520f1bbcfed521017b4a95f5c01/public/get-pip.py",
          "command_snippet": "ENV PYTHON_GET_PIP_URL=https://github.com/py...",
          "command_all": "ENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/d5cb0afaf23b8520f1bbcfed521017b4a95f5c01/public/get-pip.py",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PYTHON_GET_PIP_SHA256=394be00f13fa1b9aaa47e911bdb59a09c3b2986472130f30aa0bfaf7f3980637",
          "command_snippet": "ENV PYTHON_GET_PIP_SHA256=394be00f13fa1b9aaa...",
          "command_all": "ENV PYTHON_GET_PIP_SHA256=394be00f13fa1b9aaa47e911bdb59a09c3b2986472130f30aa0bfaf7f3980637",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "RUN",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 10264835,
          "size_human": "10 MB",
          "command_snippet": "RUN set -eux; \t\twget -O get-pip.py \"$PYTHON_...",
          "command_all": "RUN set -eux; \t\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum -c -; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t--no-compile \t\t\"pip==$PYTHON_PIP_VERSION\" \t\t\"setuptools==$PYTHON_SETUPTOOLS_VERSION\" \t; \trm -f get-pip.py; \t\tpip --version",
          "system_commands": [
            "set -eux",
            "wget -O get-pip.py \"$PYTHON_GET_PIP_URL\"",
            "echo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum -c -",
            "export PYTHONDONTWRITEBYTECODE=1",
            "python get-pip.py --disable-pip-version-check --no-cache-dir --no-compile \"pip==$PYTHON_PIP_VERSION\" \"setuptools==$PYTHON_SETUPTOOLS_VERSION\"",
            "rm -f get-pip.py",
            "pip --version"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "CMD",
          "time": "2023-04-12T01:08:13Z",
          "is_nop": false,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"python3\"]\n",
          "command_snippet": "CMD [\"python3\"]\n",
          "command_all": "CMD [\"python3\"]\n",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-12T04:00:00+03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "WORKDIR",
          "time": "2023-04-25T17:32:27Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "/app",
          "command_snippet": "WORKDIR /app",
          "command_all": "WORKDIR /app",
          "system_commands": [
            "mkdir -p /app"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-25T20:30:00+03:00",
          "inst_set_time_index": 2
        },
        {
          "type": "COPY",
          "time": "2023-04-28T15:04:16Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 3230,
          "size_human": "3.2 kB",
          "params": ". .",
          "command_snippet": "COPY . .",
          "command_all": "COPY . .",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-28T18:00:00+03:00",
          "inst_set_time_index": 3
        },
        {
          "type": "COPY",
          "time": "2023-04-28T15:04:16Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 61,
          "size_human": "61 B",
          "params": "./requirements.txt .",
          "command_snippet": "COPY ./requirements.txt .",
          "command_all": "COPY ./requirements.txt .",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-28T18:00:00+03:00",
          "inst_set_time_index": 3
        },
        {
          "type": "RUN",
          "time": "2023-04-28T15:04:26Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 25877423,
          "size_human": "26 MB",
          "command_snippet": "RUN pip install --no-cache-dir --upgrade pip...",
          "command_all": "RUN pip install --no-cache-dir --upgrade pip && \\\n\tpip install --no-cache-dir -r requirements.txt",
          "system_commands": [
            "pip install --no-cache-dir --upgrade pip",
            "pip install --no-cache-dir -r requirements.txt"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-28T18:00:00+03:00",
          "inst_set_time_index": 3
        },
        {
          "type": "ENV",
          "time": "2023-04-28T15:04:26Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "FLASK_APP=api.py",
          "command_snippet": "ENV FLASK_APP=api.py",
          "command_all": "ENV FLASK_APP=api.py",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-28T18:00:00+03:00",
          "inst_set_time_index": 3
        },
        {
          "type": "EXPOSE",
          "time": "2023-04-28T15:04:26Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "5000/tcp",
          "command_snippet": "EXPOSE 5000/tcp",
          "command_all": "EXPOSE 5000/tcp",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-28T18:00:00+03:00",
          "inst_set_time_index": 3
        },
        {
          "type": "CMD",
          "time": "2023-04-28T15:04:26Z",
          "is_last_instruction": true,
          "is_nop": false,
          "is_exec_form": true,
          "local_image_exists": true,
          "layer_index": 0,
          "size": 0,
          "params": "[\"python3\",\"-m\",\"flask\",\"run\",\"--host=0.0.0.0\"]\n",
          "command_snippet": "CMD [\"python3\",\"-m\",\"flask\",\"run\",\"--host=0....",
          "command_all": "CMD [\"python3\",\"-m\",\"flask\",\"run\",\"--host=0.0.0.0\"]\n",
          "comment": "buildkit.dockerfile.v0",
          "raw_tags": [
            "three-tier-webapp_backend:latest"
          ],
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-04-28T18:00:00+03:00",
          "inst_set_time_index": 3
        }
      ]
    }
  ],
  "image_created": true,
  "image_build_engine": "docker"
}
