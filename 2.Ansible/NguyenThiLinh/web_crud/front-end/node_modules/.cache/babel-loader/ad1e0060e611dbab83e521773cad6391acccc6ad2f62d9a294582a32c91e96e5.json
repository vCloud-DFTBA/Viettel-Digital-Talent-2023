{"ast":null,"code":"import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'button',\n    bsPrefix,\n    className,\n    onClick,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","map":{"version":3,"names":["React","useContext","classNames","AccordionContext","isAccordionItemSelected","AccordionItemContext","useBootstrapPrefix","jsx","_jsx","useAccordionButton","eventKey","onClick","activeEventKey","onSelect","alwaysOpen","e","eventKeyPassed","Array","isArray","includes","filter","k","AccordionButton","forwardRef","_ref","ref","as","Component","bsPrefix","className","props","accordionOnClick","type","displayName"],"sources":["/home/liinhhnt/VDTCloud2023/web_merge/front-end/node_modules/react-bootstrap/esm/AccordionButton.js"],"sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,gBAAgB,IAAIC,uBAAuB,QAAQ,oBAAoB;AAC9E,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,SAASC,kBAAkBA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACpD,MAAM;IACJC,cAAc;IACdC,QAAQ;IACRC;EACF,CAAC,GAAGb,UAAU,CAACE,gBAAgB,CAAC;EAChC,OAAOY,CAAC,IAAI;IACV;AACJ;AACA;AACA;IACI,IAAIC,cAAc,GAAGN,QAAQ,KAAKE,cAAc,GAAG,IAAI,GAAGF,QAAQ;IAElE,IAAII,UAAU,EAAE;MACd,IAAIG,KAAK,CAACC,OAAO,CAACN,cAAc,CAAC,EAAE;QACjC,IAAIA,cAAc,CAACO,QAAQ,CAACT,QAAQ,CAAC,EAAE;UACrCM,cAAc,GAAGJ,cAAc,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKX,QAAQ,CAAC;QAC7D,CAAC,MAAM;UACLM,cAAc,GAAG,CAAC,GAAGJ,cAAc,EAAEF,QAAQ,CAAC;QAChD;MACF,CAAC,MAAM;QACL;QACAM,cAAc,GAAG,CAACN,QAAQ,CAAC;MAC7B;IACF;IAEAG,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACG,cAAc,EAAED,CAAC,CAAC;IACvDJ,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,CAAC,CAAC;EACvC,CAAC;AACH;AACA,MAAMO,eAAe,GAAG,aAAatB,KAAK,CAACuB,UAAU,CAAC,CAAAC,IAAA,EAOnDC,GAAG,KAAK;EAAA,IAP4C;IACrD;IACAC,EAAE,EAAEC,SAAS,GAAG,QAAQ;IACxBC,QAAQ;IACRC,SAAS;IACTlB,OAAO;IACP,GAAGmB;EACL,CAAC,GAAAN,IAAA;EACCI,QAAQ,GAAGtB,kBAAkB,CAACsB,QAAQ,EAAE,kBAAkB,CAAC;EAC3D,MAAM;IACJlB;EACF,CAAC,GAAGT,UAAU,CAACI,oBAAoB,CAAC;EACpC,MAAM0B,gBAAgB,GAAGtB,kBAAkB,CAACC,QAAQ,EAAEC,OAAO,CAAC;EAC9D,MAAM;IACJC;EACF,CAAC,GAAGX,UAAU,CAACE,gBAAgB,CAAC;EAEhC,IAAIwB,SAAS,KAAK,QAAQ,EAAE;IAC1BG,KAAK,CAACE,IAAI,GAAG,QAAQ;EACvB;EAEA,OAAO,aAAaxB,IAAI,CAACmB,SAAS,EAAE;IAClCF,GAAG,EAAEA,GAAG;IACRd,OAAO,EAAEoB,gBAAgB;IACzB,GAAGD,KAAK;IACR,eAAe,EAAEpB,QAAQ,KAAKE,cAAc;IAC5CiB,SAAS,EAAE3B,UAAU,CAAC2B,SAAS,EAAED,QAAQ,EAAE,CAACxB,uBAAuB,CAACQ,cAAc,EAAEF,QAAQ,CAAC,IAAI,WAAW;EAC9G,CAAC,CAAC;AACJ,CAAC,CAAC;AACFY,eAAe,CAACW,WAAW,GAAG,iBAAiB;AAC/C,eAAeX,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}