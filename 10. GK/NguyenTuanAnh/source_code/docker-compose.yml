version: '3.9'

services:
  webserver:
    container_name: nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend_1
      - backend_2

  backend_1:
    container_name: flask_1
    build:
      context: flask
      dockerfile: Dockerfile
    environment:
      - MYSQL_HOST=database
      - MYSQL_USER=debian-sys-maint
      - MYSQL_PASSWORD=MxHyYGaovDfTPRa8
      - MYSQL_DB=crudapp
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - /tmp/10..gk/mysqld:/run/mysqld

  backend_2:
    container_name: flask_2
    build:
      context: flask
      dockerfile: Dockerfile
    environment:
      - MYSQL_HOST=database
      - MYSQL_USER=debian-sys-maint
      - MYSQL_PASSWORD=MxHyYGaovDfTPRa8
      - MYSQL_DB=crudapp
    restart: unless-stopped
    ports:
      - "5001:5000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - /tmp/10..gk/mysqld:/run/mysqld

  database:
    image: mysql:8.0.32
    restart: unless-stopped
    container_name: mysql
    environment:
      - MYSQL_USER=debian-sys-maint
      - MYSQL_PASSWORD=MxHyYGaovDfTPRa8
      - MYSQL_ROOT_PASSWORD=tuananh
      - MYSQL_DATABASE=crudapp
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=tuananh --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    volumes:
      - /opt/10..gk/mysql_data:/var/lib/mysql
      - /tmp/10..gk/mysqld:/var/run/mysqld